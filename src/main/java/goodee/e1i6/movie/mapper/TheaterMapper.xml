<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.e1i6.movie.mapper.TheaterMapper">
	<!-- 빠른 예매 - 영화 선택 시 해당 지역 및 상영중인 극장 수 출력 -->
	<select id="selectRegionListByMovie" parameterType="int" resultType="java.util.Map">
		SELECT 
			t.theater_region theaterRegion
			, COUNT(ss.schedule_key) regionCount
		FROM theater t
			LEFT JOIN screenroom sr ON t.theater_key = sr.theater_key
			LEFT JOIN screening_schedule ss ON sr.screenroom_key = ss.screenroom_key AND ss.movie_key = #{movieKey}
		GROUP BY t.theater_region;
	</select>
	
	<!-- 빠른 예매 - 지역에 해당하는 극장 목록 -->
	<select id="selectTheaterNameListByRegion" parameterType="String" resultType="java.util.Map">
		SELECT theater_key theaterKey
		, theater_name theaterName
		FROM theater
		WHERE theater_region = #{theaterRegion}
	</select>
	
	<!-- 빠른 예매(지역순) -->
	<select id="selectTheaterRegionList" resultType="java.util.Map">
		SELECT 
			theater_key theaterKey
			, theater_region theaterRegion
			, COUNT(*) count
		FROM 
			theater
		GROUP BY theater_region
		ORDER BY theater_region
	</select>
	
	<!-- 극장 출력(이름순) -->
	<select id="selectTheaterList" resultType="goodee.e1i6.movie.vo.Theater">
		SELECT 
			theater_key theaterKey
			, theater_name theaterName
			, theater_region theaterRegion
			, theater_info theaterInfo
			, theater_address theaterAddress
			, theater_ticketing_info theaterTicketingInfo
			, createdate
		FROM 
			theater
		ORDER BY theater_name
	</select>
	
	<!-- 극장 상세 정보 -->
	<select id="selectTheaterOne" parameterType="int" resultType="goodee.e1i6.movie.vo.Theater">
		SELECT 
			theater_key theaterKey
			, theater_name theaterName
			, theater_region theaterRegion
			, theater_info theaterInfo
			, theater_address theaterAddress
			, theater_ticketing_info theaterTicketingInfo
			, createdate
		FROM 
			theater
		WHERE 
			theater_key = #{theaterKey}
	</select>
	
	<!-- 극장 등록 -->
	<insert id="insertTheater" parameterType="goodee.e1i6.movie.vo.Theater">
		INSERT INTO theater (
			theater_name
			, theater_region
			, theater_info
			, theater_address
			, theater_ticketing_info
		) VALUES (
			#{theaterName}
			, #{theaterRegion}
			, #{theaterInfo}
			, #{theaterAddress}
			, #{theaterTicketingInfo}
		)		
	</insert>
	
	<!-- 극장 수정 -->
	<update id="updateTheater" parameterType="goodee.e1i6.movie.vo.Theater">
		UPDATE theater 
		SET 
			theater_name = #{theaterName}
			, theater_region = #{theaterRegion}
			, theater_info = #{theaterInfo}
			, theater_address = #{theaterAddress}
			, theater_ticketing_info = #{theaterTicketingInfo}
		WHERE theater_key = #{theaterKey}
	</update>
	
	<!-- 극장 삭제 -->
	<delete id="deleteTheater" parameterType="int">
		DELETE FROM theater WHERE theater_key = #{theater_key}
	</delete>
	
	<!-- 극장 삭제 검사 -->
	<select id="selectCheckedTheaterForDelete" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM 
			theater t
		LEFT JOIN screenroom s ON t.theater_key = s.theater_key
		LEFT JOIN question q ON t.theater_key = q.theater_key
		WHERE t.theater_key = #{theaterKey}
	</select>
</mapper>